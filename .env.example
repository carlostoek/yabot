# =============================================
# TELEGRAM BOT CONFIGURATION
# =============================================
# Your Telegram bot token from @BotFather
# Format: "1234567890:ABCdefGhIJKlmNoPQRsTUVwxyz"
BOT_TOKEN=7570619877:AAHJMc_PNgZT9rpjUzpp19FMo7WlmHfA5Ms

# =============================================
# WEBHOOK CONFIGURATION
# =============================================
# URL to which Telegram will send updates (optional, leave empty to use polling)
# Example: https://yourdomain.com/webhook
WEBHOOK_URL=

# Optional secret token for webhook request validation (recommended)
# Must be 1-256 characters. Used to validate incoming webhook requests
WEBHOOK_SECRET=

# Certificate file path for self-signed SSL certificates (optional)
# Example: 'path/to/certificate.pem' (only needed for self-signed certificates)
WEBHOOK_CERTIFICATE=

# Maximum allowed number of simultaneous HTTPS connections to the webhook
WEBHOOK_MAX_CONNECTIONS=40

# List of update types the bot should receive via webhook
# Comma-separated values: "message,edited_channel_post,callback_query" (optional)
ALLOWED_UPDATES=

# =============================================
# BOT BEHAVIOR CONFIGURATION
# =============================================
# Enable/disable webhook mode. Set to false to use polling
# Default: true (webhook mode)
WEBHOOK_ENABLED=true

# Polling timeout in seconds (when using polling mode)
# Default: 30 seconds
POLLING_TIMEOUT=30

# Maximum number of connections for the bot
# Default: 100
MAX_CONNECTIONS=100

# =============================================
# LOGGING CONFIGURATION
# =============================================
# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Logging format: 'text' or 'json'
LOG_FORMAT=text

# Optional path to log file (leave empty for console only)
LOG_FILE_PATH=

# Maximum size of log file in bytes before rotation (default: 10MB)
LOG_MAX_FILE_SIZE=10485760

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# =============================================
# SECURITY CONFIGURATION
# =============================================
# IP address to limit webhook access (optional, for security)
WEBHOOK_IP_ADDRESS=

# =============================================
# PERFORMANCE CONFIGURATION
# =============================================
# Request timeout in seconds for API calls
REQUEST_TIMEOUT=30

# Enable/disable automatic restart on crashes
AUTO_RESTART=true

# =============================================
# DEVELOPMENT CONFIGURATION
# =============================================
# Enable development mode (more verbose logging, etc.)
DEV_MODE=false

# Enable debug mode (additional debugging information)
DEBUG=false

# =============================================
# DATABASE CONFIGURATION
# =============================================
# MongoDB connection string
# Example: mongodb://username:password@host:port/database
MONGODB_URI=mongodb://localhost:27017

# MongoDB database name
MONGODB_DATABASE=yabot

# MongoDB connection pool settings
MONGODB_MIN_POOL_SIZE=5
MONGODB_MAX_POOL_SIZE=50
MONGODB_MAX_IDLE_TIME=30000
MONGODB_SERVER_SELECTION_TIMEOUT=5000
MONGODB_SOCKET_TIMEOUT=10000

# SQLite database path
# Example: ./yabot.db or /path/to/database.db
SQLITE_DATABASE_PATH=./yabot.db

# SQLite connection pool settings
SQLITE_POOL_SIZE=20
SQLITE_MAX_OVERFLOW=30
SQLITE_POOL_TIMEOUT=10
SQLITE_POOL_RECYCLE=3600

# =============================================
# REDIS CONFIGURATION
# =============================================
# Redis connection URL
# Example: redis://username:password@host:port
REDIS_URL=redis://localhost:6379

# Redis password (optional)
REDIS_PASSWORD=

# Redis connection pool settings
REDIS_MAX_CONNECTIONS=50
REDIS_RETRY_ON_TIMEOUT=true
REDIS_SOCKET_CONNECT_TIMEOUT=5
REDIS_SOCKET_TIMEOUT=10

# Redis local queue settings (for event queue fallback)
REDIS_LOCAL_QUEUE_MAX_SIZE=1000
REDIS_LOCAL_QUEUE_PERSISTENCE_FILE=event_queue.pkl

# =============================================
# INTERNAL API CONFIGURATION
# =============================================
# Internal API server host
API_HOST=localhost

# Internal API server port
API_PORT=8001

# Number of API server workers
API_WORKERS=1

# SSL certificate for internal API (optional)
API_SSL_CERT=

# SSL key for internal API (optional)
API_SSL_KEY=

# Access token expiration time in minutes
API_ACCESS_TOKEN_EXPIRE_MINUTES=15

# Refresh token expiration time in days
API_REFRESH_TOKEN_EXPIRE_DAYS=7
